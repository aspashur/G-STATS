"ICT goods exports (% of total goods exports) [TX.VAL.ICTG.ZS.UN]", "Multidimensional poverty index (scale 0-1) [SI.POV.MDIM.XQ]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]","GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]","GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]", "Mobile cellular subscriptions [IT.CEL.SETS]", "Secure Internet servers [IT.NET.SECR]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]","Arable land (hectares per person) [AG.LND.ARBL.HA.PC]"
) %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
# names(un)
# un %>%
# dplyr::count(`Country Name`)
correlation_matrix <- cor(un %>% select_if(is.numeric), use = "complete.obs")
un_temp <- read.csv("temperature.csv") %>%
clean_names() %>%
mutate(temp = as.numeric(as.character(temperature_celsius))) %>%
group_by(year, country) %>%
summarise(avg_temp = mean(temp)) %>%
filter(year %in% c(2010:2020))
# un_temp %>%
#   dplyr::count(country)
un_rain <- read.csv("rainfall.csv") %>%
clean_names() %>%
mutate(rainfall_mm = as.numeric(as.character(rainfall_mm))) %>%
group_by(year, country) %>%
summarise(avg_rainfall = mean(rainfall_mm)) %>%
filter(year %in% c(2010:2020))
rain_temp <- un_rain %>%
left_join(un_temp, by = c("year", "country")) %>%
mutate(country = trimws(country))
h <- unique(rain_temp$country)
j <- unique(un$country)
z <- un %>%
filter(!country %in% h)
u <- un %>%
filter(country %in% h)
# clean_data <- rain_temp %>%
#                 full_join(un, by=c("year","country"))
clean_data <- merge(rain_temp,un)
View(clean_data)
### checking for collinearity
correlation_matrix <- cor(clean_data %>% select_if(is.numeric))
# Create a long-format data frame for plotting
correlation_data <- as.data.frame(as.table(correlation_matrix))
### checking for collinearity
#correlation_matrix <- cor(clean_data %>% select_if(is.numeric))
correlation_matrix <- cor(un %>% select_if(is.numeric), use = "complete.obs")
# Create a long-format data frame for plotting
correlation_data <- as.data.frame(as.table(correlation_matrix))
View(correlation_data)
View(correlation_matrix)
View(correlation_data)
View(correlation_matrix)
### checking for collinearity
#correlation_matrix <- cor(clean_data %>% select_if(is.numeric))
correlation_matrix <- cor(clean_data %>% select_if(is.numeric), use = "complete.obs")
write.csv(clean_data,clean_data.csv)
write.csv(clean_data,"clean_data.csv")
# Step 1: Normalize the data
normalized_data <- apply(clean_data[, 3:15], 2, function(x) (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)))
normalized_data
# Step 2: Assign weights (you can adjust the weights based on your requirements)
weights <- c(0.1, 0.15, 0.08, 0.1, 0.05, 0.12, 0.07, 0.1, 0.06, 0.05, 0.08, 0.06, 0.08)
# Step 3: Calculate the Climate Change Vulnerability Index (CCVI)
un$CCVI <- rowSums(normalized_data * weights, na.rm = TRUE)
# Step 2: Assign weights (you can adjust the weights based on your requirements)
weights <- c(0.1, 0.15, 0.08, 0.1, 0.05, 0.12, 0.07, 0.1, 0.06, 0.05, 0.08, 0.06, 0.08)
# Step 3: Calculate the Climate Change Vulnerability Index (CCVI)
clean_data$CCVI <- rowSums(normalized_data * weights, na.rm = TRUE)
View(clean_data)
View(clean_data)
# Step 1: Normalize the data
normalized_data <- apply(clean_data[, 3:4], 2, function(x) (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)))
# Step 2: Assign weights (you can adjust the weights based on your requirements)
weights <- c(0.1, 0.15, 0.08, 0.1, 0.05, 0.12, 0.07, 0.1, 0.06, 0.05, 0.08, 0.06, 0.08)
# Step 3: Calculate the Climate Change Vulnerability Index (CCVI)
clean_data$CCVI <- rowSums(normalized_data * weights, na.rm = TRUE)
View(clean_data)
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(readxl)
library(dplyr)
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_.xlsx")%>%
un <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_o.xlsx")%>%
select("Country Name","Time","Forest area (sq. km) [AG.LND.FRST.K2]", "CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]", "Population density (people per sq. km of land area) [EN.POP.DNST]",
"ICT goods exports (% of total goods exports) [TX.VAL.ICTG.ZS.UN]", "Multidimensional poverty index (scale 0-1) [SI.POV.MDIM.XQ]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]","GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]","GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]", "Mobile cellular subscriptions [IT.CEL.SETS]", "Secure Internet servers [IT.NET.SECR]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]","Arable land (hectares per person) [AG.LND.ARBL.HA.PC]"
) %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
un <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_o.xlsx")%>%
select("Country Name","Time","Forest area (sq. km) [AG.LND.FRST.K2]", "CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]", "Population density (people per sq. km of land area) [EN.POP.DNST]",
"ICT goods exports (% of total goods exports) [TX.VAL.ICTG.ZS.UN]", "Multidimensional poverty index (scale 0-1) [SI.POV.MDIM.XQ]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]","GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]","GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]", "Mobile cellular subscriptions [IT.CEL.SETS]", "Secure Internet servers [IT.NET.SECR]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]","Arable land (hectares per person) [AG.LND.ARBL.HA.PC]"
) %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators.xlsx")
View(uno)
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(readxl)
library(dplyr)
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators.xlsx")
un1 <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_o.xlsx")%>%
select("Country Name","Time","Forest area (sq. km) [AG.LND.FRST.K2]", "CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]", "Population density (people per sq. km of land area) [EN.POP.DNST]",
"ICT goods exports (% of total goods exports) [TX.VAL.ICTG.ZS.UN]", "Multidimensional poverty index (scale 0-1) [SI.POV.MDIM.XQ]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]","GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]","GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]", "Mobile cellular subscriptions [IT.CEL.SETS]", "Secure Internet servers [IT.NET.SECR]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]","Arable land (hectares per person) [AG.LND.ARBL.HA.PC]"
) %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
un <- merge(uno,un)
un <- merge(uno,un1)
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators.xlsx")
View(uno)
un1 <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_o.xlsx")
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators.xlsx")
un <- merge(uno,un1)
un <- un %>%
select("Country Name","Time","Forest area (sq. km) [AG.LND.FRST.K2]", "CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]", "Population density (people per sq. km of land area) [EN.POP.DNST]",
"ICT goods exports (% of total goods exports) [TX.VAL.ICTG.ZS.UN]", "Multidimensional poverty index (scale 0-1) [SI.POV.MDIM.XQ]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]","GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]","GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]", "Mobile cellular subscriptions [IT.CEL.SETS]", "Secure Internet servers [IT.NET.SECR]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]","Arable land (hectares per person) [AG.LND.ARBL.HA.PC]"
) %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(readxl)
library(dplyr)
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators.xlsx")
un1 <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_o.xlsx")
unk <- merge(uno,un1)
un <- unk %>%
select("Country Name","Time","Forest area (sq. km) [AG.LND.FRST.K2]", "CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]", "Population density (people per sq. km of land area) [EN.POP.DNST]",
"ICT goods exports (% of total goods exports) [TX.VAL.ICTG.ZS.UN]", "Multidimensional poverty index (scale 0-1) [SI.POV.MDIM.XQ]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]","GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]","GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]", "Mobile cellular subscriptions [IT.CEL.SETS]", "Secure Internet servers [IT.NET.SECR]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]","Arable land (hectares per person) [AG.LND.ARBL.HA.PC]"
) %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
names(unk)
names(uno)
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(readxl)
library(dplyr)
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators.xlsx")
un1 <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_o.xlsx")
unk <- merge(uno,un1)
names(uno)
un <- unk %>%
select("Country Name",
"Time",
"Forest area (sq. km) [AG.LND.FRST.K2]",
"CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]",
"Population density (people per sq. km of land area) [EN.POP.DNST]",
"School enrollment,
tertiary (% gross) [SE.TER.ENRR]",
"Control of Corruption: Estimate [CC.EST]",
"Mobile cellular subscriptions (per 100 people) [IT.CEL.SETS.P2]",
"Regulatory Quality: Estimate [RQ.EST]",
"Rule of Law: Estimate [RL.EST]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]",
"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]",
"GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]",
"Mobile cellular subscriptions [IT.CEL.SETS]",
"Prevalence of severe wasting",
"weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
"Rural population (% of total population) [SP.RUR.TOTL.ZS]",
"Agricultural machinery,tractors per 100 sq. km of arable land [AG.LND.TRAC.ZS]",
"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]",
"Nurses and midwives (per 1,000 people) [SH.MED.NUMW.P3]",
"Population ages 65 and above (% of total population) [SP.POP.65UP.TO.ZS]",
"Population ages 0-14 (% of total population) [SP.POP.0014.TO.ZS]",
"Logistics performance index: Ability to track and trace consignments (1=low to 5=high) [LP.LPI.TRAC.XQ]",
"Population living in areas where elevation is below 5 meters (% of total population) [EN.POP.EL5M.ZS]",
"Access to electricity (% of population) [EG.ELC.ACCS.ZS]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"Arable land (hectares per person) [AG.LND.ARBL.HA.PC]") %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
un <- unk %>%
select("Country Name",
"Time",
"Forest area (sq. km) [AG.LND.FRST.K2]",
"CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]",
"Population density (people per sq. km of land area) [EN.POP.DNST]",
"School enrollment, tertiary (% gross) [SE.TER.ENRR]",
"Control of Corruption: Estimate [CC.EST]",
"Mobile cellular subscriptions (per 100 people) [IT.CEL.SETS.P2]",
"Regulatory Quality: Estimate [RQ.EST]",
"Rule of Law: Estimate [RL.EST]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]",
"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]",
"GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]",
"Mobile cellular subscriptions [IT.CEL.SETS]",
"Prevalence of severe wasting",
"weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
"Rural population (% of total population) [SP.RUR.TOTL.ZS]",
"Agricultural machinery,tractors per 100 sq. km of arable land [AG.LND.TRAC.ZS]",
"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]",
"Nurses and midwives (per 1,000 people) [SH.MED.NUMW.P3]",
"Population ages 65 and above (% of total population) [SP.POP.65UP.TO.ZS]",
"Population ages 0-14 (% of total population) [SP.POP.0014.TO.ZS]",
"Logistics performance index: Ability to track and trace consignments (1=low to 5=high) [LP.LPI.TRAC.XQ]",
"Population living in areas where elevation is below 5 meters (% of total population) [EN.POP.EL5M.ZS]",
"Access to electricity (% of population) [EG.ELC.ACCS.ZS]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"Arable land (hectares per person) [AG.LND.ARBL.HA.PC]") %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
un <- unk %>%
select("Country Name",
"Time",
"Forest area (sq. km) [AG.LND.FRST.K2]",
"CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]",
"Population density (people per sq. km of land area) [EN.POP.DNST]",
"School enrollment, tertiary (% gross) [SE.TER.ENRR]",
"Control of Corruption: Estimate [CC.EST]",
"Mobile cellular subscriptions (per 100 people) [IT.CEL.SETS.P2]",
"Regulatory Quality: Estimate [RQ.EST]",
"Rule of Law: Estimate [RL.EST]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]",
"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]",
"GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]",
"Mobile cellular subscriptions [IT.CEL.SETS]",
"Prevalence of severe wasting,weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
"Rural population (% of total population) [SP.RUR.TOTL.ZS]",
"Agricultural machinery,tractors per 100 sq. km of arable land [AG.LND.TRAC.ZS]",
"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]",
"Nurses and midwives (per 1,000 people) [SH.MED.NUMW.P3]",
"Population ages 65 and above (% of total population) [SP.POP.65UP.TO.ZS]",
"Population ages 0-14 (% of total population) [SP.POP.0014.TO.ZS]",
"Logistics performance index: Ability to track and trace consignments (1=low to 5=high) [LP.LPI.TRAC.XQ]",
"Population living in areas where elevation is below 5 meters (% of total population) [EN.POP.EL5M.ZS]",
"Access to electricity (% of population) [EG.ELC.ACCS.ZS]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"Arable land (hectares per person) [AG.LND.ARBL.HA.PC]") %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
Prevalence of severe wasting,weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
un <- unk %>%
select("Country Name",
"Time",
"Forest area (sq. km) [AG.LND.FRST.K2]",
"CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]",
"Population density (people per sq. km of land area) [EN.POP.DNST]",
"School enrollment, tertiary (% gross) [SE.TER.ENRR]",
"Control of Corruption: Estimate [CC.EST]",
"Mobile cellular subscriptions (per 100 people) [IT.CEL.SETS.P2]",
"Regulatory Quality: Estimate [RQ.EST]",
"Rule of Law: Estimate [RL.EST]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]",
"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]",
"GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]",
"Mobile cellular subscriptions [IT.CEL.SETS]",
"Prevalence of severe wasting,weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
"Rural population (% of total population) [SP.RUR.TOTL.ZS]",
"Agricultural machinery,tractors per 100 sq. km of arable land [AG.LND.TRAC.ZS]",
"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]",
"Nurses and midwives (per 1,000 people) [SH.MED.NUMW.P3]",
"Population ages 65 and above (% of total population) [SP.POP.65UP.TO.ZS]",
"Population ages 0-14 (% of total population) [SP.POP.0014.TO.ZS]",
"Logistics performance index: Ability to track and trace consignments (1=low to 5=high) [LP.LPI.TRAC.XQ]",
"Population living in areas where elevation is below 5 meters (% of total population) [EN.POP.EL5M.ZS]",
"Access to electricity (% of population) [EG.ELC.ACCS.ZS]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"Arable land (hectares per person) [AG.LND.ARBL.HA.PC]") %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(readxl)
library(dplyr)
uno <- read_xlsx("P_Data_Extract_From_World_Development_Indicators.xlsx")
un1 <- read_xlsx("P_Data_Extract_From_World_Development_Indicators_o.xlsx")
unk <- merge(uno,un1)
names(uno)
un <- unk %>%
select("Country Name",
"Time",
"Forest area (sq. km) [AG.LND.FRST.K2]",
"CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]",
"Population density (people per sq. km of land area) [EN.POP.DNST]",
"School enrollment, tertiary (% gross) [SE.TER.ENRR]",
"Control of Corruption: Estimate [CC.EST]",
"Mobile cellular subscriptions (per 100 people) [IT.CEL.SETS.P2]",
"Regulatory Quality: Estimate [RQ.EST]",
"Rule of Law: Estimate [RL.EST]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]",
"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]",
"GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]",
"Mobile cellular subscriptions [IT.CEL.SETS]",
"Prevalence of severe wasting,weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
"Rural population (% of total population) [SP.RUR.TOTL.ZS]",
"Agricultural machinery,tractors per 100 sq. km of arable land [AG.LND.TRAC.ZS]",
"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]",
"Nurses and midwives (per 1,000 people) [SH.MED.NUMW.P3]",
"Population ages 65 and above (% of total population) [SP.POP.65UP.TO.ZS]",
"Population ages 0-14 (% of total population) [SP.POP.0014.TO.ZS]",
"Logistics performance index: Ability to track and trace consignments (1=low to 5=high) [LP.LPI.TRAC.XQ]",
"Population living in areas where elevation is below 5 meters (% of total population) [EN.POP.EL5M.ZS]",
"Access to electricity (% of population) [EG.ELC.ACCS.ZS]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"Arable land (hectares per person) [AG.LND.ARBL.HA.PC]") %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
View(unk)
names(unk)
names(unk)
un <- unk %>%
select("Country Name",
"Time",
"Forest area (sq. km) [AG.LND.FRST.K2]",
"CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]",
"Population density (people per sq. km of land area) [EN.POP.DNST]",
"School enrollment, tertiary (% gross) [SE.TER.ENRR]",
"Control of Corruption: Estimate [CC.EST]",
"Mobile cellular subscriptions (per 100 people) [IT.CEL.SETS.P2]",
"Regulatory Quality: Estimate [RQ.EST]",
"Rule of Law: Estimate [RL.EST]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]",
"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]",
"GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]",
"Mobile cellular subscriptions [IT.CEL.SETS]",
"Prevalence of severe wasting, weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
"Rural population (% of total population) [SP.RUR.TOTL.ZS]",
"Agricultural machinery,tractors per 100 sq. km of arable land [AG.LND.TRAC.ZS]",
"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]",
"Nurses and midwives (per 1,000 people) [SH.MED.NUMW.P3]",
"Population ages 65 and above (% of total population) [SP.POP.65UP.TO.ZS]",
"Population ages 0-14 (% of total population) [SP.POP.0014.TO.ZS]",
"Logistics performance index: Ability to track and trace consignments (1=low to 5=high) [LP.LPI.TRAC.XQ]",
"Population living in areas where elevation is below 5 meters (% of total population) [EN.POP.EL5M.ZS]",
"Access to electricity (% of population) [EG.ELC.ACCS.ZS]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"Arable land (hectares per person) [AG.LND.ARBL.HA.PC]") %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
un <- unk %>%
select("Country Name",
"Time",
"Forest area (sq. km) [AG.LND.FRST.K2]",
"CO2 emissions (kg per 2015 US$ of GDP) [EN.ATM.CO2E.KD.GD]",
"Net migration [SM.POP.NETM]",
"Population density (people per sq. km of land area) [EN.POP.DNST]",
"School enrollment, tertiary (% gross) [SE.TER.ENRR]",
"Control of Corruption: Estimate [CC.EST]",
"Mobile cellular subscriptions (per 100 people) [IT.CEL.SETS.P2]",
"Regulatory Quality: Estimate [RQ.EST]",
"Rule of Law: Estimate [RL.EST]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"GDP per capita (constant 2015 US$) [NY.GDP.PCAP.KD]",
"GDP growth (annual %) [NY.GDP.MKTP.KD.ZG]",
"GDP (constant 2015 US$) [NY.GDP.MKTP.KD]",
"Human capital index (HCI) (scale 0-1) [HD.HCI.OVRL]",
"Mobile cellular subscriptions [IT.CEL.SETS]",
"Prevalence of severe wasting, weight for height (% of children under 5) [SH.SVR.WAST.ZS]",
"Rural population (% of total population) [SP.RUR.TOTL.ZS]",
"Agricultural machinery, tractors per 100 sq. km of arable land [AG.LND.TRAC.ZS]",
"Physicians (per 1,000 people) [SH.MED.PHYS.ZS]",
"Nurses and midwives (per 1,000 people) [SH.MED.NUMW.P3]",
"Population ages 65 and above (% of total population) [SP.POP.65UP.TO.ZS]",
"Population ages 0-14 (% of total population) [SP.POP.0014.TO.ZS]",
"Logistics performance index: Ability to track and trace consignments (1=low to 5=high) [LP.LPI.TRAC.XQ]",
"Population living in areas where elevation is below 5 meters (% of total population) [EN.POP.EL5M.ZS]",
"Access to electricity (% of population) [EG.ELC.ACCS.ZS]",
"Individuals using the Internet (% of population) [IT.NET.USER.ZS]",
"Arable land (hectares per person) [AG.LND.ARBL.HA.PC]") %>%
clean_names() %>%
rename(year = time, country = country_name) %>%
filter(year %in% c(2010:2020)) %>%
slice(1:2387) %>%
mutate(country = case_when(country == "Gambia, The" ~ "Gambia",
TRUE ~ as.character(country)))
View(un)
un_temp <- read.csv("temperature.csv") %>%
clean_names() %>%
mutate(temp = as.numeric(as.character(temperature_celsius))) %>%
group_by(year, country) %>%
summarise(avg_temp = mean(temp)) %>%
filter(year %in% c(2010:2020))
un_rain <- read.csv("rainfall.csv") %>%
clean_names() %>%
mutate(rainfall_mm = as.numeric(as.character(rainfall_mm))) %>%
group_by(year, country) %>%
summarise(avg_rainfall = mean(rainfall_mm)) %>%
filter(year %in% c(2010:2020))
rain_temp <- un_rain %>%
left_join(un_temp, by = c("year", "country")) %>%
mutate(country = trimws(country))
h <- unique(rain_temp$country)
j <- unique(un$country)
z <- un %>%
filter(!country %in% h)
u <- un %>%
filter(country %in% h)
clean_data <- merge(rain_temp,un)
write.csv(clean_data,"clean_data.csv")
getwd()
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(tensorflow)
install.packages("tensorflow")
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(tensorflow)
library(keras)
install.packages("keras")
library(dplyr)
library(readxl)
library(ggplot2)
library(janitor)
library(tensorflow)
library(keras)
library(ggplot2)
library(scales)
cat("Keras Version:", keras_version(), "\n")
install.packages("hrbrthemes")
library(hrbrthemes)
